// <auto-generated />
using System;
using CinemaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaApp.Data.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20250120193234_PreSeedData")]
    partial class PreSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CinemaApp.Data.Models.Cinema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae3b4c7d-3b95-4a84-a6b3-18c8b4d8f45d"),
                            Location = "123 Main Street, New York",
                            Name = "Grand Central Cinema"
                        },
                        new
                        {
                            Id = new Guid("9a67f8cb-8b3c-4f53-9429-d7b4c912f3b1"),
                            Location = "456 Sunset Blvd, Los Angeles",
                            Name = "Sunset Boulevard Theater"
                        },
                        new
                        {
                            Id = new Guid("d8346e8e-392c-4872-9c9e-d3c6e8e5b784"),
                            Location = "789 Broadway, Chicago",
                            Name = "Downtown Cineplex"
                        },
                        new
                        {
                            Id = new Guid("c4e8c967-b54f-4c53-96b8-f8bcd6e9c4c5"),
                            Location = "101 Coastal Road, Miami",
                            Name = "Oceanview Cinema"
                        },
                        new
                        {
                            Id = new Guid("fb4c8e3d-4a53-4c67-95b9-e3d4c912f8a7"),
                            Location = "202 Maple Avenue, Toronto",
                            Name = "Maple Leaf Theater"
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.CinemaMovie", b =>
                {
                    b.Property<Guid>("CinemaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("CinemaId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("CinemasMovies");

                    b.HasData(
                        new
                        {
                            CinemaId = new Guid("ae3b4c7d-3b95-4a84-a6b3-18c8b4d8f45d"),
                            MovieId = new Guid("6b12f8a7-d4c8-41b9-8f3d-9c6e7d8f45c2"),
                            IsDeleted = false
                        },
                        new
                        {
                            CinemaId = new Guid("9a67f8cb-8b3c-4f53-9429-d7b4c912f3b1"),
                            MovieId = new Guid("8c9e3d67-4a53-4b95-b8f3-6c7d8f4a9c5e"),
                            IsDeleted = false
                        },
                        new
                        {
                            CinemaId = new Guid("d8346e8e-392c-4872-9c9e-d3c6e8e5b784"),
                            MovieId = new Guid("f8b4c67d-d912-4e5c-8b3c-6e7d45c3b9f4"),
                            IsDeleted = false
                        },
                        new
                        {
                            CinemaId = new Guid("c4e8c967-b54f-4c53-96b8-f8bcd6e9c4c5"),
                            MovieId = new Guid("9c8b7e45-df8c-412c-9b3e-7d8f4b6c9f3d"),
                            IsDeleted = false
                        },
                        new
                        {
                            CinemaId = new Guid("fb4c8e3d-4a53-4c67-95b9-e3d4c912f8a7"),
                            MovieId = new Guid("4a8c9b3e-7f8c-45c6-8d9b-c3e7f9b4a6d8"),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b12f8a7-d4c8-41b9-8f3d-9c6e7d8f45c2"),
                            Description = "An epic journey through uncharted territories.",
                            Director = "John Smith",
                            Duration = 120,
                            Genre = "Adventure",
                            ReleaseDate = new DateTime(2023, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Great Adventure"
                        },
                        new
                        {
                            Id = new Guid("8c9e3d67-4a53-4b95-b8f3-6c7d8f4a9c5e"),
                            Description = "A hilarious take on everyday life.",
                            Director = "Jane Doe",
                            Duration = 90,
                            Genre = "Comedy",
                            ReleaseDate = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Laugh Out Loud"
                        },
                        new
                        {
                            Id = new Guid("f8b4c67d-d912-4e5c-8b3c-6e7d45c3b9f4"),
                            Description = "A suspenseful thriller unraveling secrets of the deep sea.",
                            Director = "Chris Lee",
                            Duration = 140,
                            Genre = "Mystery",
                            ReleaseDate = new DateTime(2024, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mystery of the Depths"
                        },
                        new
                        {
                            Id = new Guid("9c8b7e45-df8c-412c-9b3e-7d8f4b6c9f3d"),
                            Description = "A thought-provoking journey through a dystopian future.",
                            Director = "Sophia Cheng",
                            Duration = 115,
                            Genre = "Science Fiction",
                            ReleaseDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Future Shock"
                        },
                        new
                        {
                            Id = new Guid("4a8c9b3e-7f8c-45c6-8d9b-c3e7f9b4a6d8"),
                            Description = "A heartwarming story of love and resilience.",
                            Director = "Michael Brown",
                            Duration = 105,
                            Genre = "Romance",
                            ReleaseDate = new DateTime(2021, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Dancing in the Rain"
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.CinemaMovie", b =>
                {
                    b.HasOne("CinemaApp.Data.Models.Cinema", "Cinema")
                        .WithMany("CinemaMovies")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CinemaApp.Data.Models.Movie", "Movie")
                        .WithMany("CinemaMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinema");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Cinema", b =>
                {
                    b.Navigation("CinemaMovies");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Movie", b =>
                {
                    b.Navigation("CinemaMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
